generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model accounts {
  id           Int            @id @default(autoincrement())
  name         String         @db.VarChar(100)
  balance      Decimal?       @default(0.00) @db.Decimal(10, 2)
  createdAt    DateTime       @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt    DateTime?      @map("updated_at") @db.Timestamp(0)
  deletedAt    DateTime?      @map("deleted_at") @db.Timestamp(0)
  transactions transactions[]
}

model cards {
  id           Int            @id @default(autoincrement())
  name         String         @db.VarChar(100)
  creditLimit  Decimal?       @default(0.00) @map("credit_limit") @db.Decimal(10, 2)
  closingDay   Int            @map("closing_day") @db.UnsignedTinyInt
  dueDay       Int            @map("due_day") @db.UnsignedTinyInt
  createdAt    DateTime       @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt    DateTime?      @map("updated_at") @db.Timestamp(0)
  deletedAt    DateTime?      @map("deleted_at") @db.Timestamp(0)
  transactions transactions[]
}

model categories {
  id           Int            @id @default(autoincrement())
  name         String         @db.VarChar(100)
  createdAt    DateTime       @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt    DateTime?      @map("updated_at") @db.Timestamp(0)
  deletedAt    DateTime?      @map("deleted_at") @db.Timestamp(0)
  transactions transactions[]
}

model transactions {
  id                Int                 @id @default(autoincrement())
  name              String              @db.VarChar(150)
  type              transactions_type
  amount            Decimal             @db.Decimal(10, 2)
  transactionDate   DateTime            @map("transaction_date") @db.Timestamp(0)
  source            transactions_source
  referenceMonth    Int                 @map("reference_month") @db.UnsignedTinyInt
  referenceYear     Int                 @map("reference_year") @db.UnsignedSmallInt
  currenInstallment Int?                @default(1) @map("current_installment") @db.UnsignedTinyInt
  totalInstallments Int?                @default(1) @map("total_installments") @db.UnsignedTinyInt
  categoryId        Int?                @map("category_id")
  accountId         Int?                @map("account_id")
  cardId            Int?                @map("card_id")
  createdAt         DateTime            @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt         DateTime?           @map("updated_at") @db.Timestamp(0)
  deletedAt         DateTime?           @map("deleted_at") @db.Timestamp(0)
  categories        categories?         @relation(fields: [categoryId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "transactions_ibfk_1")
  accounts          accounts?           @relation(fields: [accountId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "transactions_ibfk_2")
  cards             cards?              @relation(fields: [cardId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "transactions_ibfk_3")

  @@index([accountId], map: "account_id")
  @@index([cardId], map: "card_id")
  @@index([categoryId], map: "category_id")
}

model users {
  id                       Int       @id @default(autoincrement())
  name                     String    @db.VarChar(100)
  email                    String    @unique(map: "email") @db.VarChar(100)
  password                 String    @db.VarChar(255)
  active                   Boolean   @default(true)
  verified                 Boolean?  @default(false)
  failedAttempts           Int?      @default(0) @map("failed_attempts")
  passwordResetToken       String?   @map("password_reset_token") @db.VarChar(255)
  accountVerificationToken String?   @map("account_verification_token") @db.VarChar(255)
  lockedUntil              DateTime? @map("locked_until") @db.Timestamp(0)
  lastLogin                DateTime? @map("last_login") @db.Timestamp(0)
  deletedAt                DateTime? @map("deleted_at") @db.Timestamp(0)
  createdAt                DateTime? @default(now()) @map("created_at") @db.Timestamp(0)
  updatedAt                DateTime? @map("updated_at") @db.Timestamp(0)
}

enum transactions_type {
  income
  expense
}

enum transactions_source {
  account
  card
}
